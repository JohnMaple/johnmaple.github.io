(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{488:function(t,a,s){"use strict";s.r(a);var e=s(8),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-基本命令","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 基本命令")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。")]),t._v(" "),s("h3",{attrs:{id:"git与svn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git与svn","aria-hidden":"true"}},[t._v("#")]),t._v(" git与svn")]),t._v(" "),s("h4",{attrs:{id:"svn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#svn","aria-hidden":"true"}},[t._v("#")]),t._v(" svn")]),t._v(" "),s("p",[t._v("SVN是集中式版本控制系统，版本库是集中放在中央服务器的，开发时需要先从中央服务器更新下最新的版本，开发完后需要提交到中央服务器；一旦断网，就不能实时同步版本了。")]),t._v(" "),s("h4",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[t._v("#")]),t._v(" git")]),t._v(" "),s("p",[t._v("git是一个分布式版本控制系统，没有中心服务器，每个人的电脑就是一个版本库，可以本地多次提交版本，然后再同步到远程与其他人同步版本。")]),t._v(" "),s("blockquote",[s("p",[t._v("分布式相比于集中式的最大区别在于开发者可以提交到本地，每个开发者通过克隆（git clone），在本地机器上拷贝一个完整的Git仓库。")])]),t._v(" "),s("h2",{attrs:{id:"下载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载","aria-hidden":"true"}},[t._v("#")]),t._v(" 下载")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Download Git"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"选择os版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择os版本","aria-hidden":"true"}},[t._v("#")]),t._v(" 选择OS版本")]),t._v(" "),s("p",[s("img",{attrs:{src:"/icons/git/git_download.png",alt:"",title:"OS版本"}})]),t._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本命令")]),t._v(" "),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("使用下面两条命令对当前电脑进行身份设置")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("git config "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('global user.name "username"\ngit config '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('global user.email "youremail"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[t._v("这里的"),s("font",{attrs:{color:"red"}},[t._v("username")]),t._v("可以是github的用户名或随便设置，"),s("font",{attrs:{color:"red"}},[t._v("email")]),t._v("可以是github注册邮箱或随便设置")],1)]),t._v(" "),s("h3",{attrs:{id:"配置ssh-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置ssh-key","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置ssh-key")]),t._v(" "),s("p",[t._v("使用ssh 克隆代码，需要配置ssh-key，检查用户目录下有没有id_rsa 和 id_rsa.pub，如果没有这两个文件就使用下面的这个命令生成密钥。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('ssh-keygen -t rsa –C "youremail@example.com"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"github设置ssh-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github设置ssh-key","aria-hidden":"true"}},[t._v("#")]),t._v(" github设置ssh-key")]),t._v(" "),s("p",[t._v("登录github，打开settings的SSH and GPG keys，选择New SSH key就可以填充SSH key的相关信息。")]),t._v(" "),s("h4",{attrs:{id:"git服务器设置ssh-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git服务器设置ssh-key","aria-hidden":"true"}},[t._v("#")]),t._v(" git服务器设置ssh-key")]),t._v(" "),s("p",[t._v("将本地生成的id_rsa.pub内容追加到git服务器git用户的~/.ssh/authorized_keys")]),t._v(" "),s("blockquote",[s("p",[t._v("如果你不想在使用密钥时输入口令，将其留空即可")])]),t._v(" "),s("h3",{attrs:{id:"git-init-（初始本地仓库）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-init-（初始本地仓库）","aria-hidden":"true"}},[t._v("#")]),t._v(" git init （初始本地仓库）")]),t._v(" "),s("p",[t._v("创建一个空的Git仓库或重新初始化一个现有仓库")]),t._v(" "),s("p",[s("img",{attrs:{src:"/icons/git/git_init.png",alt:"git init",title:"git初始化"}})]),t._v(" "),s("p",[t._v("初始化成功后，会在当前目录下创建一个.git文件夹")]),t._v(" "),s("p",[s("img",{attrs:{src:"/icons/git/git_init_down.png",alt:"git init",title:".git目录"}})]),t._v(" "),s("h3",{attrs:{id:"git-add-（添加代码到本地仓库）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-add-（添加代码到本地仓库）","aria-hidden":"true"}},[t._v("#")]),t._v(" git add （添加代码到本地仓库）")]),t._v(" "),s("p",[t._v("将文件内容添加到索引(将修改添加到暂存区)。也就是将要提交的文件的信息添加到索引库中。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("git add <path>")])])]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("$ git add .  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将所有修改添加到暂存区")]),t._v("\n$ git add *  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ant风格添加修改")]),t._v("\n$ git add "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("*Controller")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将以Controller结尾的文件的所有修改添加到暂存区")]),t._v("\n$ git add Hello*   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将所有以Hello开头的文件的修改添加到暂存区 例如:HelloWorld.txt,Hello.java,HelloGit.txt ...")]),t._v("\n$ git add Hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将以Hello开头后面只有一位的文件的修改提交到暂存区 例如:Hello1.txt,HelloA.java 如果是HelloGit.txt或者Hello.java是不会被添加的")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("code",[t._v("git add -u [<path>]")]),t._v(": 把"),s("code",[t._v("<path>")]),t._v("中所有跟踪文件中被修改过或已删除文件的信息添加到索引库。它不会处理那些不被跟踪的文件。省略"),s("code",[t._v("<path>")]),t._v("表示"),s("code",[t._v(".")]),t._v(",即当前目录。")]),t._v(" "),s("p",[s("code",[t._v("git add -A [<path>]")]),t._v(": 把"),s("code",[t._v("<path>")]),t._v("中所有跟踪文件中被修改过或已删除文件和所有未跟踪的文件信息添加到索引库。省略"),s("code",[t._v("<path>")]),t._v("表示"),s("code",[t._v(".")]),t._v(",即当前目录。")]),t._v(" "),s("h3",{attrs:{id:"git-commit-（提交代码到本地仓库）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-（提交代码到本地仓库）","aria-hidden":"true"}},[t._v("#")]),t._v(" git commit （提交代码到本地仓库）")]),t._v(" "),s("p",[t._v("用于将更改记录(提交)到存储库。将索引的当前内容与描述更改的用户和日志消息一起存储在新的提交中。")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("$ git commit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('m "the commit message"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("这里的"),s("font",{attrs:{color:"red"}},[t._v("-m")]),t._v("就是你提交的注释，记得以后写一定要使用注释！这是一个好习惯！")],1)]),t._v(" "),s("h3",{attrs:{id:"git-status-（查看状态）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-status-（查看状态）","aria-hidden":"true"}},[t._v("#")]),t._v(" git status （查看状态）")]),t._v(" "),s("p",[t._v("用于显示工作目录和暂存区的状态。使用此命令能看到那些修改被暂存到了, 哪些没有, 哪些文件没有被Git tracked到。")]),t._v(" "),s("h3",{attrs:{id:"git-diff-（比较两次修改的差异）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-diff-（比较两次修改的差异）","aria-hidden":"true"}},[t._v("#")]),t._v(" git diff （比较两次修改的差异）")]),t._v(" "),s("p",[t._v("用于显示提交和工作树等之间的更改。此命令比较的是工作目录中当前文件和暂存区域快照之间的差异,也就是修改之后还没有暂存起来的变化内容。")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("git diff <file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较当前文件和暂存区文件差异 git diff")]),t._v("\n\ngit diff <id1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("<id1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("<id2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较两次提交之间的差异")]),t._v("\n\ngit diff <branch1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" <branch2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在两个分支之间比较")]),t._v("\ngit diff "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staged "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较暂存区和版本库差异")]),t._v("\n\ngit diff "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cached "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较暂存区和版本库差异")]),t._v("\n\ngit diff "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("stat "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅仅比较统计信息原文出自【易百教程】，商业转载请联系作者获得授权，非商业请保留原文链接：https://www.yiibai.com/git/git_diff.html")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h3",{attrs:{id:"git-log-（显示所有提交过的版本信息）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-log-（显示所有提交过的版本信息）","aria-hidden":"true"}},[t._v("#")]),t._v(" git log （显示所有提交过的版本信息）")]),t._v(" "),s("p",[t._v("用于显示提交日志信息")]),t._v(" "),s("blockquote",[s("p",[t._v("git log --pretty=oneline")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/icons/git/git_log.png",alt:"git log",title:"git log"}})]),t._v(" "),s("h3",{attrs:{id:"git-reflog-（所有分支的所有操作记录）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog-（所有分支的所有操作记录）","aria-hidden":"true"}},[t._v("#")]),t._v(" git reflog （所有分支的所有操作记录）")]),t._v(" "),s("p",[t._v("这个命令是告诉你所有操作的版本信息")]),t._v(" "),s("p",[s("img",{attrs:{src:"/icons/git/git_reflog.png",alt:"git reflog",title:"git reflog"}})]),t._v(" "),s("h3",{attrs:{id:"git-reset-（版本回滚）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-（版本回滚）","aria-hidden":"true"}},[t._v("#")]),t._v(" git reset （版本回滚）")]),t._v(" "),s("p",[t._v("用于将当前HEAD复位到指定状态。一般用于撤消之前的一些操作(如：git add,git commit等)。")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("git reset "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hard a0ca311\ngit reset "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hard HEAD^\ngit reset "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hard HEAD~50\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"git-push-（推送远端）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push-（推送远端）","aria-hidden":"true"}},[t._v("#")]),t._v(" git push （推送远端）")]),t._v(" "),s("p",[t._v("用于将本地分支的更新，推送到远程主机")]),t._v(" "),s("div",{staticClass:"language-yml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[t._v("git push "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("u origin master\ngit push origin master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[t._v("如果当前分支与多个主机存在追踪关系，则可以使用 "),s("font",{attrs:{color:"red"}},[t._v("-u")]),t._v(" 选项指定一个默认主机，这样后面就可以不加任何参数使用"),s("code",[t._v("git push")])],1)]),t._v(" "),s("h3",{attrs:{id:"git-pull-（拉取远端）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-pull-（拉取远端）","aria-hidden":"true"}},[t._v("#")]),t._v(" git pull （拉取远端）")]),t._v(" "),s("p",[t._v("取回远程主机某个分支的更新，再与本地的指定分支合并\n"),s("code",[t._v("git pull <远程主机名> <远程分支名>:<本地分支名>")])]),t._v(" "),s("div",{staticClass:"language-yml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[t._v("git pull    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果当前分支只有一个追踪分支，连远程主机名都可以省略")]),t._v("\ngit pull origin next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("master   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要取回origin主机的next分支，与本地的master分支合并")]),t._v("\ngit pull origin next    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果远程分支(next)要与当前分支合并，则冒号后面的部分可以省略")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等效下面两句命令")]),t._v("\ngit fetch origin\ngit merge origin/next\n\ngit pull origin   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("blockquote",[s("p",[t._v("git clone 克隆时，本地分支默认与远程主机的同名分支，建立追踪关系")])]),t._v(" "),s("h2",{attrs:{id:"更多命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更多命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 更多命令")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.yiibai.com/git",target:"_blank",rel:"noopener noreferrer"}},[t._v("git 命令详解"),s("OutboundLink")],1)])])},[],!1,null,null,null);a.default=r.exports}}]);